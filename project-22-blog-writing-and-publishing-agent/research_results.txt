--- Content from https://www.anthropic.com/news/model-context-protocol ---
{'query': 'get_contents:https://www.anthropic.com/news/model-context-protocol', 'follow_up_questions': None, 'answer': None, 'images': [], 'results': [{'url': 'https://www.anthropic.com/news/model-context-protocol', 'title': 'Introducing the Model Context Protocol - Anthropic', 'content': "Today, we're open-sourcing the Model Context Protocol (MCP), a new standard for connecting AI assistants to the systems where data lives, including content repositories, business tools, and development environments. The Model Context Protocol is an open standard that enables developers to build secure, two-way connections between their data sources and AI-powered tools. Claude 3.5 Sonnet is adept at quickly building MCP server implementations, making it easy for organizations and individuals to rapidly connect their most important datasets with a range of AI-powered tools. All Claude.ai plans support connecting MCP servers to the Claude Desktop app.", 'score': 0.73981786, 'raw_content': None}, {'url': 'https://docs.anthropic.com/en/docs/mcp', 'title': 'Model Context Protocol (MCP) - Anthropic API', 'content': 'Model Context Protocol (MCP) - Anthropic Model Context Protocol (MCP) WelcomeDeveloper PlatformClaude CodeModel Context Protocol (MCP)API ReferenceResourcesRelease Notes # Model Context Protocol (MCP) Copy page MCP is an open protocol that standardizes how applications provide context to LLMs. Just as USB-C provides a standardized way to connect your devices to various peripherals and accessories, MCP provides a standardized way to connect AI models to different data sources and tools. ## \u200b Building with MCP ## MCP Documentation ## \u200b MCP connector ## MCP connector documentation Learn how to use the MCP connector in the Messages API to connect to MCP servers. ## \u200b MCP with Claude Code ## MCP with Claude Code Learn how to set up MCP for Claude Code. Was this page helpful?', 'score': 0.6213807, 'raw_content': None}, {'url': 'https://modelcontextprotocol.io/', 'title': 'Model Context Protocol', 'content': 'Model Context Protocol *   Model Context Protocol Connect your AI applications to the world Whether it’s reading files from your computer, searching through an internal or external knowledge base, or updating tasks in an project management tool, MCP provides a secure, standardized, _simple_ way to give AI systems the context they need. ### 1 Choose MCP servers ### 2 Connect your AI application Configure your AI application (like Claude, VS Code, or ChatGPT) to connect to your MCP servers. The application can now see available tools, resources and prompts from all connected servers. ### 3 Work with context Your AI-powered application can now access real data, execute actions, and provide more helpful responses based on your actual context.', 'score': 0.6100127, 'raw_content': None}, {'url': 'https://medium.com/@nimritakoul01/the-model-context-protocol-mcp-a-complete-tutorial-a3abe8a7f4ef', 'title': 'The Model Context Protocol (MCP) — A Complete Tutorial - Medium', 'content': 'An MCP server can provide access to databases, CRMs like Salesforce, local file systems, and version control systems like Git. The role of the server builder is to **expose tools, resources, and prompts** in a way that is consumable by any compatible client. In essence, the relationship between MCP clients and servers is one of **standardised interaction**, where clients leverage the capabilities exposed by servers through the common language of the MCP protocol, leading to a more efficient and scalable ecosystem for building AI applications and agents. The Model Context Protocol (MCP) provides a standardized way for servers to expose prompts, resources, and tools to clients. The Model Context Protocol (MCP) defines a rigorous lifecycle for client-server connections that ensures proper capability negotiation and state management.', 'score': 0.49128565, 'raw_content': None}, {'url': 'https://modelcontextprotocol.io/introduction', 'title': 'Introduction - Model Context Protocol', 'content': '## \u200b Why MCP? At its core, MCP follows a client-server architecture where a host application can connect to multiple servers: MCP Protocol MCP Protocol MCP Protocol MCP Server A MCP Server B MCP Server C - **MCP Clients**: Protocol clients that maintain 1:1 connections with servers - **MCP Servers**: Lightweight programs that each expose specific capabilities through the standardized Model Context Protocol - **Local Data Sources**: Your computer’s files, databases, and services that MCP servers can securely access - **Remote Services**: External systems available over the internet (e.g., through APIs) that MCP servers can connect to Get started building your own client that can integrate with all MCP servers## For Claude Desktop Users Understand how MCP connects clients, servers, and LLMs## Resources - Why MCP?', 'score': 0.35669366, 'raw_content': None}], 'response_time': 0.93}

